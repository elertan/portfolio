{"version":3,"sources":["components/NavBar/NavBar.scss","components/Footer/Footer.scss","components/layout/Container/Container.scss","components/Main/ProjectsSection/ProjectsSection.scss","components/Main/HomeSection/HomeSection.scss","components/Main/HomeSection/me.jpg","components/Main/Main.scss","components/App.scss","components/NavBar/NavBar.tsx","components/Footer/Footer.tsx","components/layout/Container/Container.tsx","components/Main/ProjectsSection/ProjectsSection.tsx","components/Main/HomeSection/HomeSection.tsx","components/Main/Main.tsx","components/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","root","navList","navItem","navItemSelected","content","container","title","backgroundContainer","imgMe","name","position","mediumLink","__webpack_require__","p","classnames","require","navItems","NavBar","react","className","map","i","classname","classNames","Object","defineProperty","key","React","Footer","Container","props","children","ProjectsSection","layout_Container_Container","meImg","media","icon","faGithub","url","faLinkedin","faEnvelope","HomeSection","src","medium","href","index_es","mediumIcon","size","Main","state","Main_HomeSection_HomeSection","Main_ProjectsSection_ProjectsSection","App","react_default","a","createElement","components_NavBar_NavBar","components_Main_Main","components_Footer_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6464c59f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_3XUmqoiKlzvnWZ0dNYy6vD\",\"navList\":\"_3H-un8FFiAQg_jkrZI2PtM\",\"navItem\":\"_1jZkMTwVuOvdd4XVmQdWAV\",\"navItemSelected\":\"_38W76zWIzivaVY0cMMls9z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_3dP95I0fD8Nf4Me2fFJtXM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_2Ph9MpVbUzOK6Qr9rFRDLC\",\"content\":\"_3uixFhBl7DXcx5pfH_pk5V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"_26nIRNAK1iSvsLr1NNGcDt\",\"title\":\"_3-ct6jjHTS6mzHal0I0V9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_3c9CtWkwsgYUfLwJJx1l_8\",\"backgroundContainer\":\"fEgTTdtRiOlMBT4WbIk46\",\"content\":\"_3YcWaT8x-8-Pkzo6w42bBw\",\"imgMe\":\"_2qmGj-sjgLeDFpAQXdwSaX\",\"name\":\"_3TrZUA9DmqiE9t8r_95z5_\",\"position\":\"_2clGCvsOrepLbpkJizdApP\",\"mediumLink\":\"z6EGDSJN0dF4TfhwrH_8\"};","module.exports = __webpack_public_path__ + \"static/media/me.e6166b2d.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_2vT9GnVgtN-WVOELa9ij7C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"_3J1NRHQ37yshHmF4DX8lLX\"};","import * as React from 'react';\nimport classNames from 'classnames';\nconst classnames = require('./NavBar.scss');\n\ninterface IProps {\n}\n\ninterface INavItem {\n  content: string;\n}\n\nconst navItems: INavItem[] = [\n  {content: 'Home'},\n  {content: 'Projects'},\n  {content: 'Contact'}\n];\n\nclass NavBar extends React.Component<IProps> {\n  public render() {\n    return (\n      <nav className={classnames.root}>\n        <ul className={classnames.navList}>\n          {navItems.map((navItem, i) => {\n            const classname = classNames(\n              classnames.navItem,\n              { [classnames.navItemSelected]: navItem.content === 'Home' }\n            );\n\n            return (\n              <li key={i} className={classname}>{navItem.content}</li>\n            );\n          })}\n        </ul>\n      </nav>\n    );\n  }\n};\n\nexport default NavBar;\n","import * as React from 'react';\nconst classnames = require('./Footer.scss');\n\ninterface IProps {}\n\nclass Footer extends React.Component<IProps> {\n  public render() {\n    return (\n      <footer className={classnames.root}>\n        <div className={classnames.content}>\n          <p>Im a footer</p>\n        </div>\n      </footer>\n    );\n  }\n};\n\nexport default Footer;\n","import * as React from 'react';\nconst classnames = require('./Container.scss');\n\ninterface IProps {\n  children?: JSX.Element | null;\n}\n\nconst Container: React.SFC<IProps> = (props: IProps) => {\n  return (\n    <div className={classnames.root}>\n      <div className={classnames.content}>\n        {props.children}\n      </div>\n    </div>\n  );\n};\n\nexport default Container;\n","import * as React from 'react';\nimport Container from \"../../layout/Container/Container\";\nconst classnames = require('./ProjectsSection.scss');\n\ninterface IProps {}\n\nclass ProjectsSection extends React.Component<IProps> {\n  public render() {\n    return (\n      <section className={classnames.root}>\n        <Container>\n          <div className={classnames.container}>\n            <h1 className={classnames.title}>Projects</h1>\n          </div>\n        </Container>\n      </section>\n    );\n  }\n};\n\nexport default ProjectsSection;\n","import * as React from 'react';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {\n  faGithub,\n  faLinkedin\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  faEnvelope\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {IconProp} from \"@fortawesome/fontawesome-svg-core\";\n\nconst classnames = require('./HomeSection.scss');\nconst meImg = require('./me.jpg');\n\ninterface IProps {\n}\n\ninterface IMedium {\n  icon: IconProp;\n  url: string;\n}\n\nconst media: IMedium[] = [\n  {icon: faGithub, url: \"https://www.github.com/elertan/\"},\n  {icon: faLinkedin, url: \"https://www.linkedin.com/in/denniskievits/\"},\n  {icon: faEnvelope, url: \"mailto:denkievits@gmail.com\"},\n];\n\nclass HomeSection extends React.Component<IProps> {\n  public render() {\n    return (\n      <section className={classnames.root}>\n        <div className={classnames.backgroundContainer}/>\n        <div className={classnames.content}>\n          <img\n            className={classnames.imgMe}\n            src={meImg}\n          />\n          <h1 className={classnames.name}>Dennis Kievits</h1>\n          <h4 className={classnames.position}>Software Engineer & Entrepeneur</h4>\n          <div>\n            {media.map((medium, i) =>\n              <a\n                key={i}\n                className={classnames.mediumLink}\n                href={medium.url}\n              >\n                <FontAwesomeIcon\n                  className={classnames.mediumIcon}\n                  icon={medium.icon}\n                  size=\"2x\"\n                />\n              </a>\n            )}\n          </div>\n        </div>\n      </section>\n    );\n  }\n};\n\nexport default HomeSection;\n","import * as React from 'react';\nimport ProjectsSection from \"./ProjectsSection/ProjectsSection\";\nimport HomeSection from \"./HomeSection/HomeSection\";\nconst classnames = require('./Main.scss');\n\ninterface IProps {}\ninterface IState {}\n\nclass Main extends React.Component<IProps, IState> {\n  public state = {};\n\n  public render() {\n    return (\n      <div className={classnames.root}>\n        <HomeSection/>\n        <ProjectsSection/>\n      </div>\n    );\n  }\n};\n\nexport default Main;\n","import React from 'react';\nimport NavBar from \"./NavBar/NavBar\";\nimport Footer from \"./Footer/Footer\";\nimport Main from \"./Main/Main\";\nconst classnames = require('./App.scss');\n\nclass App extends React.Component {\n  public render() {\n    return (\n      <div className={classnames.root}>\n        <NavBar />\n        <Main />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}